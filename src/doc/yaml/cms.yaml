
# (c) Secure Identity Alliance

openapi: 3.0.0
info:
  description: OSIA CMS Interface
  version: 1.0.0
  title: OSIA Credential Management System Interface
  license:
    name: SIA
    url: "https://raw.githubusercontent.com/SecureIdentityAlliance/osia/master/LICENSE"
tags:
  - name: Credential Request
servers:
  - url: http://cms.com/
  - url: https://cms.com/
paths:

  /v1/credentialRequest:
    post:
      tags:
        - Credential Request
      summary: Create a request for a credential
      operationId: createCredentialRequest
      parameters:
        - name: personId
          in: query
          description: the id of the person to create the credential request for
          required: true
          schema:
            type: string
        - name: credentialProfileId
          in: query
          description: The id of the credential request
          required: true
          schema:
            type: string
        - name: transactionId
          in: query
          description: The id of the transaction
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequest'
      responses:
        '201':
          description: Operation successful
        '400':
          description: Bad request
        '403':
          description: Operation not allowed
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/credentialRequest/{credentialRequestId}:
    get:
      tags:
        - Credential Request
      summary: Read a credential request
      operationId: readCredentialRequest
      parameters:
        - name: credentialRequestId
          in: path
          description: the id of the credential request
          required: true
          schema:
            type: string
        - name: attributes
          in: query
          description: The (optional) set of required attributes to retrieve
          required: false
          schema:
            type: array
            items:
              type: string
            example:
              - surname
              - familyname
        - name: transactionId
          in: query
          description: The id of the transaction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Read successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialRequest'
        '400':
          description: Bad request
        '403':
          description: Read not allowed
        '404':
          description: Unknown record
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Credential Request
      summary: Update a credential request
      operationId: updateCredentialRequest
      parameters:
        - name: credentialRequestId
          in: path
          description: the id of the credential request
          required: true
          schema:
            type: string
        - name: transactionId
          in: query
          description: The id of the transaction
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequest'
      responses:
        '204':
          description: Update successful
        '400':
          description: Bad request
        '403':
          description: Update not allowed
        '404':
          description: Unknown record
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Credential Request
      summary: Delete a credential request
      operationId: deleteCredentialRequest
      parameters:
        - name: credentialRequestId
          in: path
          description: the id of the credential request
          required: true
          schema:
            type: string
        - name: transactionId
          in: query
          description: The id of the transaction
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Delete successful
        '400':
          description: Bad request
        '403':
          description: Delete not allowed
        '404':
          description: Unknown record
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/credential:
    get:
      tags:
        - Credential
      summary: Retrieve a list of credentials that match the passed in search criteria
      operationId: findCredentials
      parameters:
        - name: expressions
          in: query
          description: The expressions to evaluate. Each expression
            is described with the attribute's name, the operator
            (one of ``<``, ``>``, ``=``, ``>=``, ``<=``)
            and the attribute value.
          required: true
          schema:
            $ref: '#/components/schemas/Expressions'
        - name: attributes
          in: query
          description: The (optional) set of required attributes to retrieve
          required: false
          schema:
            type: array
            items:
              type: string
        - name: transactionId
          in: query
          description: The id of the transaction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Read successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        '400':
          description: Bad request
        '403':
          description: Read not allowed
        '404':
          description: Unknown record
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/credential/{credentialId}:
    get:
      tags:
        - Credential
      summary: Read a credential
      operationId: readCredential
      parameters:
        - name: credentialId
          in: path
          description: the id of the credential
          required: true
          schema:
            type: string
        - name: attributes
          in: query
          description: The (optional) set of required attributes to retrieve
          required: false
          schema:
            type: array
            items:
              type: string
        - name: transactionId
          in: query
          description: The id of the transaction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Read successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        '400':
          description: Bad request
        '403':
          description: Read not allowed
        '404':
          description: Unknown record
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Credential
      summary: Cancel a credential
      operationId: cancelCredential
      parameters:
        - name: credentialId
          in: path
          description: the id of the credential
          required: true
          schema:
            type: string
        - name: transactionId
          in: query
          description: The id of the transaction
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Delete successful
        '400':
          description: Bad request
        '403':
          description: Delete not allowed
        '404':
          description: Unknown record
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/credential/{credentialId}/suspend:
    patch:
      tags:
        - Credential
      summary: (Un)suspend a credential
      operationId: suspendCredential, unsuspendCredential
      parameters:
        - name: credentialId
          in: path
          description: the id of the credential
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: the suspended status of the credential
          required: true
          schema:
            type: string
            enum: [ACTIVE, SUSPENDED]
        - name: reason
          in: query
          description: the reason for (un)suspension
          required: true
          schema:
            type: string
        - name: transactionId
          in: query
          description: The id of the transaction
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credential'
      responses:
        '204':
          description: Update successful
        '400':
          description: Bad request
        '403':
          description: Update not allowed
        '404':
          description: Unknown record
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          description: Error code
          type: integer
          format: int32
        message:
          description: Error message
          type: string
    
    CredentialRequest:
      description: A request for a credential
      type: object
      properties:
        credentialRequestId:
          type: string
          description: The unique id for this credential request
        credentialProfileId:
          type: string
          description: The id of the credential request
        requestedExpiryDate:
          type: string
          format: date-time
          description: May be used to override the default expiry of the credential
      required:
        - credentialRequestId

    Credential:
      description: A credential
      type: object
      properties:
        credentialId:
          type: string
          description: The unique id for this credential
        personId:
          type: string
          description: The unique id of person that the credential is issued to
        issuedDate:
          type: string
          format: date-time
          description: The date that this credential was issued
        expiryDate:
          type: string
          format: date-time
          description: The date that this credential expires
        suspended:
          type: boolean
          description: Is this credential suspended
        cancelled:
          type: boolean
          description: Is this credential cancelled
      required:
        - credentialId

    Expression:
      type: object
      required:
        - attributeName
        - operator
        - value
      properties:
        attributeName:
          type: string
        operator:
          type: string
          enum: ['<', '>', '=', '>=', '<=']
        value:
          oneOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
    Expressions:
      type: array
      items:
        $ref: '#/components/schemas/Expression'
        
